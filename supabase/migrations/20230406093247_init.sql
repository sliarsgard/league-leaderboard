create table "public"."games" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "bans_blue" smallint[] not null,
    "bans_red" smallint[] not null,
    "winning_team" text not null
);


alter table "public"."games" enable row level security;

create table "public"."player_game_data" (
    "id" bigint generated by default as identity not null,
    "champion" smallint not null,
    "kills" smallint not null,
    "deaths" smallint not null,
    "assists" smallint not null,
    "elo_change" smallint not null,
    "role" text not null,
    "player_id" bigint not null,
    "game_id" bigint not null,
    "win" boolean not null,
    "team" text not null
);


alter table "public"."player_game_data" enable row level security;

create table "public"."players" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "name" text not null,
    "elo" numeric not null default '1000'::numeric,
    "losses" numeric not null default '0'::numeric,
    "wins" numeric not null default '0'::numeric
);


alter table "public"."players" enable row level security;

CREATE UNIQUE INDEX games_pkey ON public.games USING btree (id);

CREATE UNIQUE INDEX player_game_data_pkey ON public.player_game_data USING btree (id);

CREATE UNIQUE INDEX players_name_key ON public.players USING btree (name);

CREATE UNIQUE INDEX players_pkey ON public.players USING btree (id);

alter table "public"."games" add constraint "games_pkey" PRIMARY KEY using index "games_pkey";

alter table "public"."player_game_data" add constraint "player_game_data_pkey" PRIMARY KEY using index "player_game_data_pkey";

alter table "public"."players" add constraint "players_pkey" PRIMARY KEY using index "players_pkey";

alter table "public"."player_game_data" add constraint "player_game_data_game_id_fkey" FOREIGN KEY (game_id) REFERENCES games(id) not valid;

alter table "public"."player_game_data" validate constraint "player_game_data_game_id_fkey";

alter table "public"."player_game_data" add constraint "player_game_data_player_id_fkey" FOREIGN KEY (player_id) REFERENCES players(id) not valid;

alter table "public"."player_game_data" validate constraint "player_game_data_player_id_fkey";

alter table "public"."players" add constraint "players_name_key" UNIQUE using index "players_name_key";

create policy "Allow all for authenticated users"
on "public"."games"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable read access for all users"
on "public"."games"
as permissive
for select
to public
using (true);


create policy "Allow all for authenticated users"
on "public"."player_game_data"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable read access for all users"
on "public"."player_game_data"
as permissive
for select
to public
using (true);


create policy "Allow all for authenticated users"
on "public"."players"
as permissive
for all
to authenticated
using (true)
with check (true);


create policy "Enable read access for all users"
on "public"."players"
as permissive
for select
to public
using (true);



